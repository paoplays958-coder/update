local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")

local flyEnabled = false
local speedEnabled = false
local jumpEnabled = false
local clickTPEnabled = false  -- Novo: Controla o Click TP
local speedValue = 16
local jumpValue = 50
local flySpeed = 50

local bodyVelocity, bodyGyro, flyConnection

local redzlib = loadstring(game:HttpGet("https://raw.githubusercontent.com/tbao143/Library-ui/refs/heads/main/Redzhubui"))()

local Window = redzlib:MakeWindow({
    Title = "Dragon Hub 0.2",
    SubTitle = "Sistema de Movimento"
})

-- Função para teleportar com clique
local function setupClickTP()
    local mouse = player:GetMouse()

    mouse.Button1Down:Connect(function()
        if not clickTPEnabled or not character or not rootPart then return end

        local targetPosition = mouse.Hit.Position
        if targetPosition and (rootPart.Position - targetPosition).Magnitude <= 1000 then
            rootPart.CFrame = CFrame.new(targetPosition + Vector3.new(0, 3, 0))
        end
    end)
end

local Tab1 = Window:MakeTab({"Movimento", "rbxassetid://7733764088"})

-- ===== Fly System =====
Tab1:AddSection({"Fly System"})

Tab1:AddToggle({
    Name = "Ativar Fly",
    Default = false,
    Callback = function(v)
        if v then startFly() else stopFly() end
    end
})

Tab1:AddSlider({
    Text = "Velocidade Fly",
    Min = 10,
    Max = 200,
    Default = 50,
    Callback = function(v) flySpeed = v end
})

-- ===== Speed System =====
Tab1:AddSection({"Speed System"})

Tab1:AddToggle({
    Name = "Ativar Speed",
    Default = false,
    Callback = function(v)
        speedEnabled = v
        humanoid.WalkSpeed = v and speedValue or 16
    end
})

Tab1:AddSlider({
    Text = "Velocidade",
    Min = 0,
    Max = 100,
    Default = 16,
    Callback = function(v)
        speedValue = v
        if speedEnabled then humanoid.WalkSpeed = v end
    end
})

-- ===== Jump System =====
Tab1:AddSection({"Jump System"})

Tab1:AddToggle({
    Name = "Ativar Jump",
    Default = false,
    Callback = function(v)
        jumpEnabled = v
        humanoid.JumpPower = v and jumpValue or 50
    end
})

Tab1:AddSlider({
    Text = "Força do Pulo",
    Min = 0,
    Max = 200,
    Default = 50,
    Callback = function(v)
        jumpValue = v
        if jumpEnabled then humanoid.JumpPower = v end
    end
})

-- ===== Click TP System =====
Tab1:AddSection({"Click TP System"})

Tab1:AddToggle({
    Name = "Ativar Click TP",
    Default = false,
    Callback = function(v)
        clickTPEnabled = v
        if v then setupClickTP() end
    end
})

-- ===== Sky Coloration =====
Tab1:AddSection({"Cor do Céu"})

Tab1:AddColorPicker({
    Name = "Cor do Céu",
    Default = BrickColor.new("Bright blue"),
    ColorPresets = {
        {Name = "Azul", Color = BrickColor.new("Bright blue")},
        {Name = "Vermelho", Color = BrickColor.new("Bright red")},
        {Name = "Verde", Color = BrickColor.new("Bright green")},
        {Name = "Roxo", Color = BrickColor.new("Bright purple")}
    },
    Callback = function(color)
        local cframe = workspace.CurrentCamera.CFrame
        local newSky = Instance.new("Sky")
        newSky.Name = "Sky"
        newSky.Parent = workspace
        newSky.LightInfluence = 0.7
        newSky.SunTopAngle = 90
        newSky.SunBottomAngle = 90
        newSky.TimeOfDay = 0
        newSky.Brightness = 1
        newSky.Color = color.Color
        cframe = cframe * CFrame.new(0, 100, 0)
        newSky.CFrame = cframe
    end
})

Tab1:AddButton({"Ativar", function()
    local currentSky = workspace:FindFirstChild("Sky")
    if currentSky then
        currentSky:Destroy()
    else
        Tab1:FindFirstChild("Cor do Céu").Callback()
    end
end})

-- ===== Config Tab =====
local Tab2 = Window:MakeTab({"Config", "rbxassetid://7733955511"})

Tab2:AddSection({"Sobre"})
Tab2:AddParagraph({"Dragon Hub 0.2", "Sistema completo de movimento"})

Tab2:AddButton({"Fechar", function()
    if flyEnabled then stopFly() end
    Window:Destroy()
end})

-- ===== Funções de Fly (atualizado) =====
local function startFly()
    flyEnabled = true
    local flightSpeed = flySpeed
    local flightGravity = 0
    local flyHeight = 10
    local flyDamping = 0.9

    local function fly()
        local currentHeight = rootPart.Position.y
        local newHeight = currentHeight + flightSpeed * (math.sin(RunService.Stepped:Get(), math.pi / 4) * flightSpeed)

        if newHeight > currentHeight + flyHeight then
            newHeight = currentHeight + flyHeight
        elseif newHeight < currentHeight then
            newHeight = currentHeight
        end

        local newVelocity = (newHeight - currentHeight) / 0.1
        local newAcceleration = (newVelocity - rootPart.Velocity.y) / 0.1

        rootPart.Velocity = Vector3.new(rootPart.Velocity.x, newVelocity, rootPart.Velocity.z)
        rootPart.Acceleration = Vector3.new(rootPart.Acceleration.x, newAcceleration, rootPart.Acceleration.z)

        if rootPart.Velocity.y < 0 then
            rootPart.Velocity = Vector3.new(rootPart.Velocity.x, 0, rootPart.Velocity.z)
            rootPart.CFrame = CFrame.new(rootPart.CFrame.Position, rootPart.CFrame.Position + Vector3.new(0, 1, 0))
        end
    end

    local function stopFly()
        flyEnabled = false
    end

    local function onCharacterAdded()
        character:WaitForChild("Humanoid").WalkSpeed = 0
        local oldPosition = rootPart.Position
        local oldVelocity = rootPart.Velocity
        local oldAcceleration = rootPart.Acceleration

        rootPart.Changed:Connect(function(prop)
            if prop == "Velocity" then
                local newVelocity = rootPart.Velocity
                if newVelocity.Magnitude <= 1 then
                    stopFly()
                end
            end
        end)

        RunService.Heartbeat:Connect(function()
            if not flyEnabled then return end

            if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
                local currentVelocity = rootPart.Velocity.y
                local newVelocity = currentVelocity + flightGravity * math.abs(currentVelocity)
                local newAcceleration = (newVelocity - currentVelocity) / 0.1

                rootPart.Velocity = Vector3.new(rootPart.Velocity.x, newVelocity, rootPart.Velocity.z)
                rootPart.Acceleration = Vector3.new(rootPart.Acceleration.x, newAcceleration, rootPart.Acceleration.z)
            end

            fly()
        end)
    end

    character.CharacterAdded:Connect(onCharacterAdded)
    onCharacterAdded()
end

local function stopFly()
    flyEnabled = false
end

-- ===== Atualização de Personagem =====
player.CharacterAdded:Connect(function(char)
    character = char
    humanoid = char:WaitForChild("Humanoid")
    rootPart = char:WaitForChild("HumanoidRootPart")
    if flyEnabled then stopFly() end
end)
