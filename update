-- LocalScript: Sistema completo com detecção de dispositivo, fly e outras funcionalidades

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = Players.LocalPlayer

-- ===========================
-- DETECÇÃO AUTOMÁTICA DE DISPOSITIVO
-- ===========================

local function detectDevice()
    if UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled then
        return "Mobile"
    elseif UserInputService.KeyboardEnabled then
        return "PC"
    elseif UserInputService.GamepadEnabled then
        return "Console"
    else
        return "Desconhecido"
    end
end

local deviceType = detectDevice()
print("Dispositivo detectado: " .. deviceType)

-- ===========================
-- SISTEMA DE FLY UNIVERSAL
-- ===========================

local flyEnabled = false
local speedEnabled = false
local jumpEnabled = false
local speedValue = 16
local jumpValue = 50
local flySpeed = 50

local skies = {
    ["Blue"] = Color3.fromRGB(0, 0, 255),
    ["Red"] = Color3.fromRGB(255, 0, 0),
    ["Green"] = Color3.fromRGB(0, 255, 0),
    ["Purple"] = Color3.fromRGB(128, 0, 128),
}

local currentSkyColor = "Blue"

local bodyVelocity, bodyGyro, flyConnection

-- ===========================
-- INTERFACE GRÁFICA (GUI)
-- ===========================

local redzlib = loadstring(game:HttpGet("https://raw.githubusercontent.com/tbao143/Library-ui/refs/heads/main/Redzhubui"))()

local Window = redzlib:MakeWindow({
    Name = "Script Hub - " .. deviceType,
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "ScriptHub"
})

-- Tab: Movimento
local TabFly = Window:MakeTab({
    Name = "Movimento",
    Icon = "rbxassetid://7733764088",
    PremiumOnly = false
})

TabFly:AddToggle({
    Name = "Ativar Fly",
    Default = false,
    Callback = function(value)
        if value then startFly() else stopFly() end
    end
})

TabFly:AddSlider({
    Name = "Velocidade Fly",
    Min = 10,
    Max = 200,
    Default = 50,
    Color = Color3.fromRGB(0, 170, 255),
    Increment = 5,
    ValueName = "Velocidade",
    Callback = function(value)
        flySpeed = value
    end
})

TabFly:AddToggle({
    Name = "Ativar Speed",
    Default = false,
    Callback = function(value)
        speedEnabled = value
        humanoid.WalkSpeed = value and speedValue or 16
    end
})

TabFly:AddSlider({
    Text = "Velocidade",
    Min = 0,
    Max = 100,
    Default = 16,
    Callback = function(value)
        speedValue = value
        if speedEnabled then humanoid.WalkSpeed = value end
    end
})

TabFly:AddToggle({
    Name = "Ativar Jump",
    Default = false,
    Callback = function(value)
        jumpEnabled = value
        humanoid.JumpPower = value and jumpValue or 50
    end
})

TabFly:AddSlider({
    Text = "Força do Pulo",
    Min = 0,
    Max = 200,
    Default = 50,
    Callback = function(value)
        jumpValue = value
        if jumpEnabled then humanoid.JumpPower = value end
    end
})

-- Tab: Configurações
local TabConfig = Window:MakeTab({
    Name = "Configurações",
    Icon = "rbxassetid://7733955511",
    PremiumOnly = false
})

TabConfig:AddLabel({
    Text = "Cor do Céu Atual: " .. currentSkyColor
})

local function showColorPicker()
    local color3Picker = Instance.new("Color3Picker")
    color3Picker.Parent = player:WaitForChild("PlayerGui")
    color3Picker.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    color3Picker.BorderSizePixel = 0
    color3Picker.Position = UDim2.new(0.8, 0, 0.8, 0)
    color3Picker.Size = UDim2.new(0, 150, 0, 100)
    color3Picker.Changed:Connect(function()
        currentSkyColor = color3Picker.Color.Name
        TabConfig:FindFirstChildWhichIsA("Label"):GetChildren()[1].Text = "Cor do Céu Atual: " .. currentSkyColor
        changeSkyColor(color3Picker.Color)
    end)
    color3Picker:GetChildren()[1].Text = "Selecione a cor do céu"
end

TabConfig:AddButton({
    Name = "Trocar Cor do Céu",
    Callback = function() showColorPicker() end
})

-- Função para ativar o fly
local function startFly()
    if flyEnabled then return end
    flyEnabled = true

    local character = player.Character
    if not character then return end

    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    local humanoid = character:FindFirstChild("Humanoid")
    if not humanoidRootPart or not humanoid then return end

    bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.MaxForce = Vector3.new(9e9, 9e9, 9e9)
    bodyVelocity.Velocity = Vector3.new(0, 0.1, 0)
    bodyVelocity.Parent = humanoidRootPart

    bodyGyro = Instance.new("BodyGyro")
    bodyGyro.MaxTorque = Vector3.new(9e9, 9e9, 9e9)
    bodyGyro.P = 9000
    bodyGyro.Parent = humanoidRootPart

    flyConnection = RunService.Heartbeat:Connect(function()
        local camera = workspace.CurrentCamera
        local move = Vector3.new(0, 0, 0)

        if UserInputService:IsKeyDown(Enum.KeyCode.W) then move = move + camera.CFrame.LookVector end
        if UserInputService:IsKeyDown(Enum.KeyCode.S) then move = move - camera.CFrame.LookVector end
        if UserInputService:IsKeyDown(Enum.KeyCode.A) then move = move - camera.CFrame.RightVector end
        if UserInputService:IsKeyDown(Enum.KeyCode.D) then move = move + camera.CFrame.RightVector end
        if UserInputService:IsKeyDown(Enum.KeyCode.Space) then move = move + Vector3.new(0, 1, 0) end
        if UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) then move = move - Vector3.new(0, 1, 0) end

        bodyVelocity.Velocity = move.Magnitude > 0 and move.Unit * flySpeed or Vector3.new(0, 0.1, 0)
        bodyGyro.CFrame = camera.CFrame
    end)
end

-- Função para desativar o fly
local function stopFly()
    flyEnabled = false

    if bodyVelocity then bodyVelocity:Destroy() end
    if bodyGyro then bodyGyro:Destroy() end
    if flyConnection then flyConnection:Disconnect() end
end

-- Função para mudar a cor do céu
local function changeSkyColor(color)
    local lighting = game:GetService("Lighting")

    if color then
        local skyColor = skies[color]
        if skyColor then
            lighting.Sky.SkyboxBk.Color = skyColor
            lighting.Sky.SkyboxDn.Color = skyColor
            lighting.Sky.SkyboxFt.Color = skyColor
            lighting.Sky.SkyboxLf.Color = skyColor
            lighting.Sky.SkyboxRt.Color = skyColor
            lighting.Sky.SkyboxUp.Color = skyColor

            game:GetService("ReplicatedStorage"):WaitForChild("ChangeSkyEvent"):FireServer(color)
        end
    end
end

-- Atalho para PC
if deviceType == "PC" then
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed then return end

        if input.KeyCode == Enum.KeyCode.F then
            if flyEnabled then
                stopFly()
            else
                startFly()
            end
        end
    end)
end

-- Evento para mudar a cor do céu no servidor
game:GetService("ReplicatedStorage"):WaitForChild("ChangeSkyEvent"):Connect(function(color)
    local targetColor = skies[color]
    if targetColor then
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= player then
                local lighting = player.Character:FindFirstChildOfClass("Lighting")
                if lighting then
                    lighting.Sky.SkyboxBk.Color = targetColor
                    lighting.Sky.SkyboxDn.Color = targetColor
                    lighting.Sky.SkyboxFt.Color = targetColor
                    lighting.Sky.SkyboxLf.Color = targetColor
                    lighting.Sky.SkyboxRt.Color = targetColor
                    lighting.Sky.SkyboxUp.Color = targetColor
                end
            end
        end
    end
end)
-- Adiciona um botão para NoClip
Tab1:AddSection({"NoClip"})

-- Cria um botão para ativar e desativar o NoClip
local toggleNoClip = Tab1:AddToggle({
    Name = "NoClip",
    Default = false,
    Callback = function(value)
        if value then
            for _, part in ipairs(player.Character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.Anchored = false
                end
            end
        else
            for _, part in ipairs(player.Character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.Anchored = true
                end
            end
        end
    end
})
