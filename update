-- ════════════════════════════════════════════════════════════════
--    🐉 DRAGON HUB - BY PAOZIN
--    Discord: discord.gg/pVsWE7WszB
--    COMPATÍVEL COM TODOS OS EXECUTORES PC/MOBILE
-- ════════════════════════════════════════════════════════════════

print("🐉 Dragon Hub - by:paozin Carregando...")

task.wait(2)

-- ========== VERIFICAÇÃO DE SERVIÇOS ==========
local success, Services = pcall(function()
    return {
        Players = game:GetService("Players"),
        UserInputService = game:GetService("UserInputService"),
        RunService = game:GetService("RunService"),
        Lighting = game:GetService("Lighting"),
        VirtualUser = game:GetService("VirtualUser")
    }
end)

if not success then
    warn("❌ Erro ao carregar serviços!")
    return
end

local Players = Services.Players
local UserInputService = Services.UserInputService
local RunService = Services.RunService
local Lighting = Services.Lighting

-- ========== VERIFICAÇÃO DO PLAYER ==========
local player = Players.LocalPlayer
if not player then
    warn("❌ Player não encontrado!")
    return
end

local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid", 10)
local rootPart = character:WaitForChild("HumanoidRootPart", 10)

if not humanoid or not rootPart then
    warn("❌ Humanoid ou RootPart não encontrado!")
    return
end

-- ========== DETECÇÃO DE PLATAFORMA ==========
local isMobile = false
pcall(function()
    isMobile = UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled
end)

print("✓ Plataforma:", isMobile and "Mobile" or "PC")

-- ========== CARREGAR BIBLIOTECA UI ==========
local redzlib
local uiSuccess = pcall(function()
    redzlib = loadstring(game:HttpGet("https://raw.githubusercontent.com/tbao143/Library-ui/refs/heads/main/Redzhubui"))()
end)

if not uiSuccess or not redzlib then
    warn("❌ Erro ao carregar UI! Verifique sua internet.")
    return
end

local Window = redzlib:MakeWindow({
    Title = "🐉 Dragon Hub",
    SubTitle = "by:paozin"
})

-- ========== VARIÁVEIS ORIGINAIS ==========
local originalWalkSpeed = humanoid.WalkSpeed or 16
local originalJumpPower = humanoid.JumpPower or 50
local originalGravity = workspace.Gravity or 196.2

-- ========== FUNÇÕES AUXILIARES ==========

-- Lista de jogadores
local function getPlayersList()
    local list = {}
    pcall(function()
        for _, p in pairs(Players:GetPlayers()) do
            if p ~= player and p.Name then
                table.insert(list, p.Name)
            end
        end
    end)
    return #list > 0 and list or {"Nenhum"}
end

-- NOVO: Lista de jogadores COM seus carros
local function getPlayersWithCars()
    local list = {}
    pcall(function()
        for _, p in pairs(Players:GetPlayers()) do
            if p.Character then
                local hum = p.Character:FindFirstChild("Humanoid")
                if hum and hum.SeatPart and hum.SeatPart:IsA("VehicleSeat") then
                    local carModel = hum.SeatPart.Parent
                    if carModel and carModel:IsA("Model") then
                        local displayName = p.Name .. " (" .. carModel.Name .. ")"
                        table.insert(list, displayName)
                    end
                end
            end
        end
    end)
    return #list > 0 and list or {"Nenhum"}
end

-- Função para pegar o carro de um jogador específico
local function getPlayerCar(playerName)
    local targetPlayer = Players:FindFirstChild(playerName)
    if targetPlayer and targetPlayer.Character then
        local hum = targetPlayer.Character:FindFirstChild("Humanoid")
        if hum and hum.SeatPart and hum.SeatPart:IsA("VehicleSeat") then
            return hum.SeatPart.Parent
        end
    end
    return nil
end

-- ========== BUILD TOOL ==========
local selectedBlockType = "Bloco Cinza"

local blockTypes = {
    ["Bloco Cinza"] = {Material = Enum.Material.Concrete, Color = Color3.fromRGB(163, 162, 165)},
    ["Bloco Vermelho"] = {Material = Enum.Material.Concrete, Color = Color3.fromRGB(196, 40, 28)},
    ["Bloco Azul"] = {Material = Enum.Material.Concrete, Color = Color3.fromRGB(13, 105, 172)},
    ["Bloco Verde"] = {Material = Enum.Material.Concrete, Color = Color3.fromRGB(75, 151, 75)},
    ["Bloco Amarelo"] = {Material = Enum.Material.Concrete, Color = Color3.fromRGB(245, 205, 48)},
    ["Bloco Roxo"] = {Material = Enum.Material.Concrete, Color = Color3.fromRGB(107, 50, 124)},
    ["Vidro"] = {Material = Enum.Material.Glass, Color = Color3.fromRGB(255, 255, 255), Transparency = 0.5}
}

local function createBuildTool()
    pcall(function()
        -- Remover tools antigas
        for _, item in pairs(player.Backpack:GetChildren()) do
            if item.Name == "Build Tool" then
                item:Destroy()
            end
        end
        
        for _, item in pairs(character:GetChildren()) do
            if item.Name == "Build Tool" and item:IsA("Tool") then
                item:Destroy()
            end
        end
        
        -- Criar nova tool
        local tool = Instance.new("Tool")
        tool.Name = "Build Tool"
        tool.RequiresHandle = false
        tool.CanBeDropped = false
        
        local handle = Instance.new("Part")
        handle.Name = "Handle"
        handle.Size = Vector3.new(1, 1, 1)
        handle.Transparency = 1
        handle.CanCollide = false
        handle.Parent = tool
        
        tool.Activated:Connect(function()
            pcall(function()
                local mouse = player:GetMouse()
                
                if mouse and mouse.Target then
                    local blockConfig = blockTypes[selectedBlockType]
                    
                    local block = Instance.new("Part")
                    block.Size = Vector3.new(4, 1, 4)
                    block.Material = blockConfig.Material
                    block.Color = blockConfig.Color
                    block.Anchored = true
                    block.CFrame = CFrame.new(mouse.Hit.Position) * CFrame.new(0, 0.5, 0)
                    
                    if blockConfig.Transparency then
                        block.Transparency = blockConfig.Transparency
                    end
                    
                    block.Parent = workspace
                end
            end)
        end)
        
        tool.Parent = player.Backpack
        print("✓ Build Tool criada:", selectedBlockType)
    end)
end

-- ========== TAB 1: MOVIMENTO ==========
local Tab1 = Window:MakeTab({"Movimento", "home"})

Tab1:AddSection({"Voo"})

local flying = false
local flySpeed = 50
local flyBody, flyGyro, flyConnection

Tab1:AddToggle({
    Name = "Fly",
    Default = false,
    Callback = function(v)
        flying = v
        
        pcall(function()
            if v then
                -- Criar componentes de voo
                flyBody = Instance.new("BodyVelocity")
                flyBody.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
                flyBody.Velocity = Vector3.new(0, 0, 0)
                flyBody.Parent = rootPart
                
                flyGyro = Instance.new("BodyGyro")
                flyGyro.MaxTorque = Vector3.new(math.huge, math.huge, math.huge)
                flyGyro.P = 9000
                flyGyro.Parent = rootPart
                
                -- Loop de voo
                flyConnection = RunService.Heartbeat:Connect(function()
                    if not flying then return end
                    
                    pcall(function()
                        if not rootPart or not rootPart.Parent then
                            flying = false
                            return
                        end
                        
                        local cam = workspace.CurrentCamera
                        local direction = Vector3.new(0, 0, 0)
                        
                        -- Controle Mobile
                        if isMobile then
                            if humanoid and humanoid.MoveVector then
                                local move = humanoid.MoveVector
                                if move.Magnitude > 0 then
                                    direction = (cam.CFrame.LookVector * move.Z) + (cam.CFrame.RightVector * move.X)
                                end
                            end
                        -- Controle PC
                        else
                            if UserInputService:IsKeyDown(Enum.KeyCode.W) then 
                                direction = direction + cam.CFrame.LookVector 
                            end
                            if UserInputService:IsKeyDown(Enum.KeyCode.S) then 
                                direction = direction - cam.CFrame.LookVector 
                            end
                            if UserInputService:IsKeyDown(Enum.KeyCode.A) then 
                                direction = direction - cam.CFrame.RightVector 
                            end
                            if UserInputService:IsKeyDown(Enum.KeyCode.D) then 
                                direction = direction + cam.CFrame.RightVector 
                            end
                            if UserInputService:IsKeyDown(Enum.KeyCode.Space) then 
                                direction = direction + Vector3.new(0, 1, 0) 
                            end
                            if UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) then 
                                direction = direction - Vector3.new(0, 1, 0) 
                            end
                        end
                        
                        -- Aplicar movimento
                        if direction.Magnitude > 0 then
                            direction = direction.Unit
                            flyBody.Velocity = direction * flySpeed
                        else
                            flyBody.Velocity = Vector3.new(0, 0, 0)
                        end
                        
                        flyGyro.CFrame = cam.CFrame
                    end)
                end)
                
                print("✓ Fly ativado")
            else
                -- Desativar fly
                flying = false
                
                if flyConnection then 
                    flyConnection:Disconnect() 
                    flyConnection = nil
                end
                
                if flyBody and flyBody.Parent then 
                    flyBody:Destroy() 
                end
                flyBody = nil
                
                if flyGyro and flyGyro.Parent then 
                    flyGyro:Destroy() 
                end
                flyGyro = nil
                
                print("✓ Fly desativado")
            end
        end)
    end
})

Tab1:AddSlider({
    Text = "Velocidade Fly",
    Min = 10,
    Max = 200,
    Default = 50,
    Callback = function(v)
        flySpeed = v
    end
})

Tab1:AddSection({"Velocidade"})

local speedEnabled = false
local speedValue = 16

Tab1:AddToggle({
    Name = "Speed",
    Default = false,
    Callback = function(v)
        pcall(function()
            speedEnabled = v
            if humanoid then
                humanoid.WalkSpeed = v and speedValue or originalWalkSpeed
            end
        end)
    end
})

Tab1:AddSlider({
    Text = "Velocidade",
    Min = 16,
    Max = 150,
    Default = 16,
    Callback = function(v)
        speedValue = v
        pcall(function()
            if speedEnabled and humanoid then 
                humanoid.WalkSpeed = v 
            end
        end)
    end
})

Tab1:AddSection({"Pulo"})

local jumpEnabled = false
local jumpValue = 50

Tab1:AddToggle({
    Name = "Jump Boost",
    Default = false,
    Callback = function(v)
        pcall(function()
            jumpEnabled = v
            if humanoid then
                humanoid.JumpPower = v and jumpValue or originalJumpPower
            end
        end)
    end
})

Tab1:AddSlider({
    Text = "Força do Pulo",
    Min = 50,
    Max = 300,
    Default = 50,
    Callback = function(v)
        jumpValue = v
        pcall(function()
            if jumpEnabled and humanoid then 
                humanoid.JumpPower = v 
            end
        end)
    end
})

local infiniteJumpConnection

Tab1:AddToggle({
    Name = "Infinite Jump",
    Default = false,
    Callback = function(v)
        pcall(function()
            if v then
                infiniteJumpConnection = UserInputService.JumpRequest:Connect(function()
                    pcall(function()
                        if humanoid then
                            humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                        end
                    end)
                end)
            else
                if infiniteJumpConnection then 
                    infiniteJumpConnection:Disconnect() 
                    infiniteJumpConnection = nil
                end
            end
        end)
    end
})

Tab1:AddSection({"Atravessar"})

local noclipEnabled = false
local noclipConnection

Tab1:AddToggle({
    Name = "Noclip",
    Default = false,
    Callback = function(v)
        noclipEnabled = v
        
        pcall(function()
            if v then
                noclipConnection = RunService.Stepped:Connect(function()
                    pcall(function()
                        if not character then return end
                        for _, part in pairs(character:GetDescendants()) do
                            if part:IsA("BasePart") and part.CanCollide then
                                part.CanCollide = false
                            end
                        end
                    end)
                end)
            else
                if noclipConnection then 
                    noclipConnection:Disconnect() 
                    noclipConnection = nil
                end
                
                pcall(function()
                    for _, part in pairs(character:GetDescendants()) do
                        if part:IsA("BasePart") then
                            part.CanCollide = true
                        end
                    end
                end)
            end
        end)
    end
})

-- ========== TAB 2: VEÍCULOS (REFORMULADO IGUAL ESPIAR JOGADOR) ==========
local Tab2 = Window:MakeTab({"Veículos", "shopping-cart"})

Tab2:AddSection({"Selecionar Jogador com Carro"})

local selectedCarPlayer = nil
local carSpeedEnabled = false
local carSpeedValue = 50
local carConnection

local carPlayerDrop = Tab2:AddDropdown({
    Name = "Selecionar Jogador",
    Options = getPlayersWithCars(),
    Default = "Nenhum",
    Callback = function(v)
        selectedCarPlayer = v
        print("✓ Selecionado:", v)
    end
})

Tab2:AddButton({"Atualizar Lista", function()
    pcall(function()
        local newList = getPlayersWithCars()
        carPlayerDrop:Refresh(newList, true)
        local count = #newList
        if newList[1] == "Nenhum" then count = 0 end
        print("✓ Lista atualizada! Jogadores com carros:", count)
    end)
end})

Tab2:AddSection({"Car Speed"})

Tab2:AddToggle({
    Name = "Ativar Car Speed",
    Default = false,
    Callback = function(v)
        carSpeedEnabled = v
        
        pcall(function()
            if v then
                if selectedCarPlayer and selectedCarPlayer ~= "Nenhum" then
                    -- Extrair nome do jogador (antes do parêntese)
                    local playerName = selectedCarPlayer:match("(.+)%s%(")
                    
                    carConnection = RunService.Heartbeat:Connect(function()
                        pcall(function()
                            if not carSpeedEnabled then return end
                            
                            local car = getPlayerCar(playerName)
                            if car then
                                for _, obj in pairs(car:GetDescendants()) do
                                    if obj:IsA("VehicleSeat") then
                                        obj.MaxSpeed = carSpeedValue
                                    end
                                end
                            end
                        end)
                    end)
                    
                    print("✓ Car Speed ativado para:", selectedCarPlayer)
                else
                    print("✗ Selecione um jogador primeiro!")
                    carSpeedEnabled = false
                end
            else
                if carConnection then 
                    carConnection:Disconnect() 
                    carConnection = nil
                end
                
                -- Resetar velocidade
                pcall(function()
                    if selectedCarPlayer and selectedCarPlayer ~= "Nenhum" then
                        local playerName = selectedCarPlayer:match("(.+)%s%(")
                        local car = getPlayerCar(playerName)
                        if car then
                            for _, obj in pairs(car:GetDescendants()) do
                                if obj:IsA("VehicleSeat") then
                                    obj.MaxSpeed = 25
                                end
                            end
                        end
                    end
                end)
                
                print("✓ Car Speed desativado")
            end
        end)
    end
})

Tab2:AddSlider({
    Text = "Velocidade do Carro",
    Min = 1,
    Max = 250,
    Default = 50,
    Callback = function(v)
        carSpeedValue = v
        print("✓ Velocidade ajustada para:", v)
    end
})

Tab2:AddSection({"Car Fly"})

local carFlyEnabled = false
local carFlySpeed = 70
local carFlyBody, carFlyGyro, carFlyConnection

Tab2:AddToggle({
    Name = "Car Fly",
    Default = false,
    Callback = function(v)
        carFlyEnabled = v
        
        pcall(function()
            if v then
                if humanoid.SeatPart and humanoid.SeatPart:IsA("VehicleSeat") then
                    local seat = humanoid.SeatPart
                    
                    carFlyBody = Instance.new("BodyVelocity")
                    carFlyBody.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
                    carFlyBody.Velocity = Vector3.new(0, 0, 0)
                    carFlyBody.Parent = seat
                    
                    carFlyGyro = Instance.new("BodyGyro")
                    carFlyGyro.MaxTorque = Vector3.new(math.huge, math.huge, math.huge)
                    carFlyGyro.P = 9000
                    carFlyGyro.Parent = seat
                    
                    carFlyConnection = RunService.Heartbeat:Connect(function()
                        pcall(function()
                            if not carFlyEnabled or not humanoid.SeatPart then return end
                            
                            local cam = workspace.CurrentCamera
                            local dir = Vector3.new(0, 0, 0)
                            
                            if isMobile then
                                if humanoid.MoveVector then
                                    local move = humanoid.MoveVector
                                    if move.Magnitude > 0 then
                                        dir = cam.CFrame.LookVector * move.Z + cam.CFrame.RightVector * move.X
                                    end
                                end
                            else
                                if UserInputService:IsKeyDown(Enum.KeyCode.W) then dir = dir + cam.CFrame.LookVector end
                                if UserInputService:IsKeyDown(Enum.KeyCode.S) then dir = dir - cam.CFrame.LookVector end
                                if UserInputService:IsKeyDown(Enum.KeyCode.A) then dir = dir - cam.CFrame.RightVector end
                                if UserInputService:IsKeyDown(Enum.KeyCode.D) then dir = dir + cam.CFrame.RightVector end
                                if UserInputService:IsKeyDown(Enum.KeyCode.Space) then dir = dir + Vector3.new(0, 1, 0) end
                                if UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) then dir = dir - Vector3.new(0, 1, 0) end
                            end
                            
                            if dir.Magnitude > 0 then 
                                dir = dir.Unit 
                                carFlyBody.Velocity = dir * carFlySpeed
                                carFlyGyro.CFrame = cam.CFrame
                            else
                                carFlyBody.Velocity = Vector3.new(0, 0, 0)
                            end
                        end)
                    end)
                    
                    print("✓ Car Fly ativado")
                else
                    print("✗ Entre em um carro primeiro!")
                end
            else
                if carFlyConnection then 
                    carFlyConnection:Disconnect() 
                    carFlyConnection = nil
                end
                if carFlyBody and carFlyBody.Parent then carFlyBody:Destroy() end
                carFlyBody = nil
                if carFlyGyro and carFlyGyro.Parent then carFlyGyro:Destroy() end
                carFlyGyro = nil
                print("✓ Car Fly desativado")
            end
        end)
    end
})

Tab2:AddSlider({
    Text = "Velocidade Car Fly",
    Min = 10,
    Max = 200,
    Default = 70,
    Callback = function(v)
        carFlySpeed = v
    end
})

-- ========== TAB 3: TELEPORTE ==========
local Tab3 = Window:MakeTab({"Teleporte", "map-pin"})

Tab3:AddSection({"Teleporte para Jogadores"})

local selectedTPPlayer = nil

local tpPlayerDrop = Tab3:AddDropdown({
    Name = "Selecionar Jogador",
    Options = getPlayersList(),
    Default = "Nenhum",
    Callback = function(v)
        selectedTPPlayer = v
    end
})

Tab3:AddButton({"Teleportar", function()
    pcall(function()
        if selectedTPPlayer and selectedTPPlayer ~= "Nenhum" then
            local target = Players:FindFirstChild(selectedTPPlayer)
            if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
                rootPart.CFrame = target.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, 3)
                print("✓ Teleportado para:", selectedTPPlayer)
            end
        end
    end)
end})

Tab3:AddButton({"Atualizar Lista", function()
    pcall(function()
        tpPlayerDrop:Refresh(getPlayersList(), true)
        print("✓ Lista atualizada!")
    end)
end})

Tab3:AddSection({"Locais de Brookhaven"})

local locations = {
    ["Spawn"] = CFrame.new(-119.7, 8.2, 94.5),
    ["Loja de Carros"] = CFrame.new(-357.5, 8.2, 647.3),
    ["Hospital"] = CFrame.new(-225.9, 8.2, -474.3),
    ["Escola"] = CFrame.new(286.3, 8.2, -733.5),
    ["Banco"] = CFrame.new(-390.6, 8.2, -26.8),
    ["Igreja"] = CFrame.new(124.8, 8.2, -490.7),
    ["Praia"] = CFrame.new(-1034.5, 8.2, 523.8),
    ["Polícia"] = CFrame.new(-257.3, 8.2, -128.4)
}

local locationNames = {}
for name, _ in pairs(locations) do
    table.insert(locationNames, name)
end

Tab3:AddDropdown({
    Name = "Selecionar Local",
    Options = locationNames,
    Default = "Spawn",
    Callback = function(v)
        pcall(function()
            if locations[v] then
                rootPart.CFrame = locations[v]
                print("✓ Teleportado para:", v)
            end
        end)
    end
})

Tab3:AddSection({"Click Teleport"})

local clickTPEnabled = false
local clickTPConnection

Tab3:AddToggle({
    Name = "Click TP",
    Default = false,
    Callback = function(v)
        clickTPEnabled = v
        
        pcall(function()
            if v then
                local mouse = player:GetMouse()
                clickTPConnection = mouse.Button1Down:Connect(function()
                    pcall(function()
                        if clickTPEnabled and mouse.Target then
                            rootPart.CFrame = CFrame.new(mouse.Hit.Position + Vector3.new(0, 3, 0))
                        end
                    end)
                end)
            else
                if clickTPConnection then 
                    clickTPConnection:Disconnect() 
                    clickTPConnection = nil
                end
            end
        end)
    end
})

-- ========== TAB 4: VISUAL ==========
local Tab4 = Window:MakeTab({"Visual", "eye"})

Tab4:AddSection({"ESP de Jogadores"})

local espEnabled = false
local espObjects = {}

Tab4:AddToggle({
    Name = "ESP",
    Default = false,
    Callback = function(v)
        espEnabled = v
        
        pcall(function()
            if v then
                for _, p in pairs(Players:GetPlayers()) do
                    if p ~= player and p.Character then
                        local highlight = Instance.new("Highlight")
                        highlight.FillColor = Color3.fromRGB(255, 0, 0)
                        highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
                        highlight.FillTransparency = 0.5
                        highlight.Adornee = p.Character
                        highlight.Parent = p.Character
                        
                        espObjects[p.UserId] = highlight
                    end
                end
            else
                for _, highlight in pairs(espObjects) do
                    if highlight then 
                        pcall(function() highlight:Destroy() end) 
                    end
                end
                espObjects = {}
            end
        end)
    end
})

Tab4:AddSection({"Iluminação"})

Tab4:AddToggle({
    Name = "Fullbright",
    Default = false,
    Callback = function(v)
        pcall(function()
            if v then
                Lighting.Brightness = 2
                Lighting.FogEnd = 100000
            else
                Lighting.Brightness = 1
                Lighting.FogEnd = 1000
            end
        end)
    end
})

Tab4:AddSection({"Skybox"})

Tab4:AddDropdown({
    Name = "Cor do Céu",
    Options = {"Normal", "Azul", "Vermelho", "Verde", "Roxo", "Rosa", "Laranja", "Noite"},
    Default = "Normal",
    Callback = function(v)
        pcall(function()
            if v == "Normal" then
                Lighting.Ambient = Color3.fromRGB(138, 138, 138)
            elseif v == "Azul" then
                Lighting.Ambient = Color3.fromRGB(100, 150, 255)
            elseif v == "Vermelho" then
                Lighting.Ambient = Color3.fromRGB(255, 50, 50)
            elseif v == "Verde" then
                Lighting.Ambient = Color3.fromRGB(50, 255, 100)
            elseif v == "Roxo" then
                Lighting.Ambient = Color3.fromRGB(150, 50, 255)
            elseif v == "Rosa" then
                Lighting.Ambient = Color3.fromRGB(255, 150, 200)
            elseif v == "Laranja" then
                Lighting.Ambient = Color3.fromRGB(255, 150, 50)
            elseif v == "Noite" then
                Lighting.Ambient = Color3.fromRGB(10, 10, 50)
            end
        end)
    end
})

Tab4:AddSection({"Câmera"})

Tab4:AddSlider({
    Text = "FOV",
    Min = 70,
    Max = 120,
    Default = 70,
    Callback = function(v)
        pcall(function()
            workspace.CurrentCamera.FieldOfView = v
        end)
    end
})

-- ========== TAB 5: FERRAMENTAS ==========
local Tab5 = Window:MakeTab({"Ferramentas", "tool"})

Tab5:AddSection({"Build Tool"})

Tab5:AddDropdown({
    Name = "Tipo de Bloco",
    Options = {
        "Bloco Cinza",
        "Bloco Vermelho",
        "Bloco Azul",
        "Bloco Verde",
        "Bloco Amarelo",
        "Bloco Roxo",
        "Vidro"
    },
    Default = "Bloco Cinza",
    Callback = function(v)
        selectedBlockType = v
    end
})

Tab5:AddButton({"Criar Build Tool", function()
    createBuildTool()
end})

Tab5:AddButton({"Deletar Blocos", function()
    pcall(function()
        local count = 0
        for _, obj in pairs(workspace:GetChildren()) do
            if obj:IsA("Part") and obj.Anchored and not obj:IsDescendantOf(character) then
                obj:Destroy()
                count = count + 1
            end
        end
        print("✓", count, "blocos deletados!")
    end)
end})

Tab5:AddSection({"Espionar Jogador"})

local selectedSpy = nil

local spyDrop = Tab5:AddDropdown({
    Name = "Selecionar Jogador",
    Options = getPlayersList(),
    Default = "Nenhum",
    Callback = function(v)
        selectedSpy = v
    end
})

Tab5:AddButton({"Espiar", function()
    pcall(function()
        if selectedSpy and selectedSpy ~= "Nenhum" then
            local target = Players:FindFirstChild(selectedSpy)
            if target and target.Character and target.Character:FindFirstChild("Humanoid") then
                workspace.CurrentCamera.CameraSubject = target.Character.Humanoid
                print("✓ Espiando:", selectedSpy)
            end
        end
    end)
end})

Tab5:AddButton({"Parar", function()
    pcall(function()
        workspace.CurrentCamera.CameraSubject = humanoid
        print("✓ Câmera restaurada")
    end)
end})

Tab5:AddButton({"Atualizar Lista", function()
    pcall(function()
        spyDrop:Refresh(getPlayersList(), true)
    end)
end})

Tab5:AddSection({"Itens"})

Tab5:AddButton({"Pegar Todos Itens", function()
    pcall(function()
        local count = 0
        for _, v in pairs(workspace:GetDescendants()) do
            if v:IsA("Tool") and v.Parent ~= player.Backpack and v.Parent ~= character then
                v.Parent = player.Backpack
                count = count + 1
            end
        end
        print("✓", count, "itens coletados!")
    end)
end})

-- ========== TAB 6: DIVERSOS ==========
local Tab6 = Window:MakeTab({"Diversos", "settings"})

Tab6:AddSection({"Anti-AFK"})

local antiAFKConnection

Tab6:AddToggle({
    Name = "Anti-AFK",
    Default = false,
    Callback = function(v)
        pcall(function()
            if v then
                antiAFKConnection = player.Idled:Connect(function()
                    pcall(function()
                        Services.VirtualUser:Button2Down(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
                        task.wait(1)
                        Services.VirtualUser:Button2Up(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
                    end)
                end)
                print("✓ Anti-AFK ativado")
            else
                if antiAFKConnection then 
                    antiAFKConnection:Disconnect() 
                    antiAFKConnection = nil
                end
                print("✓ Anti-AFK desativado")
            end
        end)
    end
})

Tab6:AddSection({"Anti-Ban"})

Tab6:AddButton({"Ativar Anti-Ban", function()
    pcall(function()
        local count = 0
        for _, v in pairs(workspace:GetDescendants()) do
            if v:IsA("TouchTransmitter") then
                v:Destroy()
                count = count + 1
            end
            
            -- Desabilitar colisões com portas
            if v:IsA("Part") and (v.Name:lower():match("door") or v.Name:lower():match("gate")) then
                v.CanCollide = false
            end
        end
        print("✓ Anti-Ban ativado! Removidos:", count, "detectores")
    end)
end})

Tab6:AddSection({"Física"})

Tab6:AddSlider({
    Text = "Gravidade",
    Min = 0,
    Max = 500,
    Default = 196,
    Callback = function(v)
        pcall(function()
            workspace.Gravity = v
        end)
    end
})

Tab6:AddButton({"Resetar Gravidade", function()
    pcall(function()
        workspace.Gravity = originalGravity
        print("✓ Gravidade restaurada")
    end)
end})

-- ========== TAB 7: CONFIG ==========
local Tab7 = Window:MakeTab({"Config", "list"})

Tab7:AddSection({"Discord"})

Tab7:AddDiscordInvite({
    Name = "Dragon Hub Discord",
    Description = "Entre no servidor!",
    Logo = "rbxassetid://18751483361",
    Invite = "https://discord.gg/pVsWE7WszB"
})

Tab7:AddSection({"Controles"})

Tab7:AddButton({"Resetar Tudo", function()
    pcall(function()
        -- Desativar fly
        flying = false
        if flyConnection then flyConnection:Disconnect() end
        if flyBody and flyBody.Parent then flyBody:Destroy() end
        if flyGyro and flyGyro.Parent then flyGyro:Destroy() end
        
        -- Desativar noclip
        if noclipConnection then noclipConnection:Disconnect() end
        
        -- Desativar car speed/fly
        if carConnection then carConnection:Disconnect() end
        if carFlyConnection then carFlyConnection:Disconnect() end
        if carFlyBody and carFlyBody.Parent then carFlyBody:Destroy() end
        if carFlyGyro and carFlyGyro.Parent then carFlyGyro:Destroy() end
        
        -- Desativar outros
        if clickTPConnection then clickTPConnection:Disconnect() end
        if infiniteJumpConnection then infiniteJumpConnection:Disconnect() end
        if antiAFKConnection then antiAFKConnection:Disconnect() end
        
        -- Remover ESP
        for _, highlight in pairs(espObjects) do
            if highlight then highlight:Destroy() end
        end
        espObjects = {}
        
        -- Restaurar valores
        if humanoid then
            humanoid.WalkSpeed = originalWalkSpeed
            humanoid.JumpPower = originalJumpPower
        end
        workspace.Gravity = originalGravity
        workspace.CurrentCamera.CameraSubject = humanoid
        workspace.CurrentCamera.FieldOfView = 70
        
        Lighting.Brightness = 1
        Lighting.FogEnd = 1000
        Lighting.Ambient = Color3.fromRGB(138, 138, 138)
        
        print("✓ Tudo resetado!")
    end)
end})

Tab7:AddButton({"Fechar Hub", function()
    pcall(function()
        Window:Destroy()
        print("✓ Dragon Hub fechado!")
    end)
end})

-- ========== AUTO-ATUALIZAÇÃO ==========
pcall(function()
    Players.PlayerAdded:Connect(function()
        task.wait(1)
        pcall(function()
            if spyDrop then spyDrop:Refresh(getPlayersList(), true) end
            if tpPlayerDrop then tpPlayerDrop:Refresh(getPlayersList(), true) end
            if carPlayerDrop then carPlayerDrop:Refresh(getPlayersWithCars(), true) end
        end)
    end)

    Players.PlayerRemoving:Connect(function()
        task.wait(1)
        pcall(function()
            if spyDrop then spyDrop:Refresh(getPlayersList(), true) end
            if tpPlayerDrop then tpPlayerDrop:Refresh(getPlayersList(), true) end
            if carPlayerDrop then carPlayerDrop:Refresh(getPlayersWithCars(), true) end
        end)
    end)

    task.spawn(function()
        while task.wait(3) do
            pcall(function()
                if carPlayerDrop then
                    carPlayerDrop:Refresh(getPlayersWithCars(), true)
                end
            end)
        end
    end)
end)

print("✓ Dragon Hub - by:paozin Carregado!")
print("✓ Sistema de veículos reformulado!")
