-- Dragon Hub 0.2 - Script Direto (cole e execute)

print("╔══════════════════════════════════════╗")
print("║       DRAGON HUB 0.2 INICIANDO       ║")
print("╚══════════════════════════════════════╝")

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Lighting = game:GetService("Lighting")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")

print("✓ Jogador carregado:", player.Name)

-- Variáveis
local flyEnabled = false
local speedEnabled = false
local jumpEnabled = false
local noclipEnabled = false
local speedValue = 16
local jumpValue = 50
local flySpeed = 50

local bodyVelocity, bodyGyro, flyConnection, noclipConnection

-- Detectar plataforma
local isMobile = UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled
local isPC = UserInputService.KeyboardEnabled and UserInputService.MouseEnabled
local platformType = isMobile and "Mobile" or (isPC and "PC" or "Unknown")

print("✓ Plataforma detectada:", platformType)

-- Carregar Library
print("⏳ Carregando Redz Library...")

local redzlib
local success, error = pcall(function()
    redzlib = loadstring(game:HttpGet("https://raw.githubusercontent.com/tbao143/Library-ui/refs/heads/main/Redzhubui"))()
end)

if not success then
    warn("❌ ERRO ao carregar library!")
    warn("Detalhes:", error)
    return
end

if not redzlib then
    warn("❌ Library retornou nil!")
    return
end

print("✓ Library carregada com sucesso!")

-- Criar Window
print("⏳ Criando janela...")

local Window = redzlib:MakeWindow({
    Title = "Dragon Hub 0.2",
    SubTitle = "Plataforma: " .. platformType
})

print("✓ Janela criada!")

-- ============================================
-- TAB 1: MOVIMENTO
-- ============================================
print("⏳ Criando Tab Movimento...")

local Tab1 = Window:MakeTab({"Movimento", "rbxassetid://7733764088"})

-- FLY SYSTEM (CORRIGIDO)
Tab1:AddSection({"Sistema de Voo"})

local function startFly()
    print("Iniciando fly...")
    flyEnabled = true
    
    -- Limpar qualquer instância anterior
    if bodyVelocity then bodyVelocity:Destroy() end
    if bodyGyro then bodyGyro:Destroy() end
    local oldForce = rootPart:FindFirstChild("FlyForce")
    if oldForce then oldForce:Destroy() end
    
    -- BodyVelocity para movimento
    bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.Name = "FlyVelocity"
    bodyVelocity.MaxForce = Vector3.new(100000, 100000, 100000)
    bodyVelocity.Velocity = Vector3.new(0, 0, 0)
    bodyVelocity.Parent = rootPart
    
    -- BodyGyro para rotação suave
    bodyGyro = Instance.new("BodyGyro")
    bodyGyro.Name = "FlyGyro"
    bodyGyro.MaxTorque = Vector3.new(9e9, 9e9, 9e9)
    bodyGyro.P = 9000
    bodyGyro.D = 500
    bodyGyro.Parent = rootPart
    
    -- Desabilitar gravidade no humanoid
    humanoid.PlatformStand = true
    
    -- Loop de voo
    flyConnection = RunService.Heartbeat:Connect(function()
        if not flyEnabled or not rootPart or not rootPart.Parent then 
            stopFly()
            return 
        end
        
        local camera = workspace.CurrentCamera
        local moveDirection = Vector3.new(0, 0, 0)
        
        -- Controles de PC
        if isPC then
            if UserInputService:IsKeyDown(Enum.KeyCode.W) then 
                moveDirection = moveDirection + camera.CFrame.LookVector 
            end
            if UserInputService:IsKeyDown(Enum.KeyCode.S) then 
                moveDirection = moveDirection - camera.CFrame.LookVector 
            end
            if UserInputService:IsKeyDown(Enum.KeyCode.A) then 
                moveDirection = moveDirection - camera.CFrame.RightVector 
            end
            if UserInputService:IsKeyDown(Enum.KeyCode.D) then 
                moveDirection = moveDirection + camera.CFrame.RightVector 
            end
            if UserInputService:IsKeyDown(Enum.KeyCode.Space) then 
                moveDirection = moveDirection + Vector3.new(0, 1, 0) 
            end
            if UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) or UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then 
                moveDirection = moveDirection - Vector3.new(0, 1, 0) 
            end
        end
        
        -- Controles Mobile (joystick virtual detectado automaticamente)
        if isMobile then
            local moveVector = humanoid.MoveVector
            if moveVector.Magnitude > 0 then
                moveDirection = camera.CFrame.LookVector * moveVector.Z + camera.CFrame.RightVector * moveVector.X
            end
            
            -- Botões de subir/descer (se implementados)
            if UserInputService:IsKeyDown(Enum.KeyCode.ButtonR1) or UserInputService:IsKeyDown(Enum.KeyCode.Space) then
                moveDirection = moveDirection + Vector3.new(0, 1, 0)
            end
            if UserInputService:IsKeyDown(Enum.KeyCode.ButtonL1) then
                moveDirection = moveDirection - Vector3.new(0, 1, 0)
            end
        end
        
        -- Aplicar movimento
        if moveDirection.Magnitude > 0 then
            bodyVelocity.Velocity = moveDirection.Unit * flySpeed
        else
            bodyVelocity.Velocity = Vector3.new(0, 0, 0)
        end
        
        -- Rotação suave da câmera
        bodyGyro.CFrame = camera.CFrame
    end)
    
    print("✓ Fly ativado! Use WASD + Space/Shift (PC) ou Joystick (Mobile)")
end

local function stopFly()
    print("Desativando fly...")
    flyEnabled = false
    
    if flyConnection then 
        flyConnection:Disconnect() 
        flyConnection = nil
    end
    
    if bodyVelocity then 
        bodyVelocity:Destroy() 
        bodyVelocity = nil
    end
    
    if bodyGyro then 
        bodyGyro:Destroy() 
        bodyGyro = nil
    end
    
    local bodyForce = rootPart:FindFirstChild("FlyForce")
    if bodyForce then bodyForce:Destroy() end
    
    -- Reativar física normal
    if humanoid then
        humanoid.PlatformStand = false
    end
    
    print("✓ Fly desativado!")
end

Tab1:AddToggle({
    Name = "Ativar Fly",
    Default = false,
    Callback = function(v)
        if v then 
            startFly() 
        else 
            stopFly() 
        end
    end
})

Tab1:AddSlider({
    Text = "Velocidade Fly",
    Min = 10,
    Max = 200,
    Default = 50,
    Callback = function(v) 
        flySpeed = v 
        print("Velocidade fly:", v)
    end
})

-- SPEED SYSTEM
Tab1:AddSection({"Sistema de Velocidade"})

Tab1:AddToggle({
    Name = "Ativar Speed",
    Default = false,
    Callback = function(v)
        speedEnabled = v
        humanoid.WalkSpeed = v and speedValue or 16
        print("Speed:", v and "ON" or "OFF")
    end
})

Tab1:AddSlider({
    Text = "Velocidade",
    Min = 0,
    Max = 100,
    Default = 16,
    Callback = function(v)
        speedValue = v
        if speedEnabled then humanoid.WalkSpeed = v end
        print("Velocidade:", v)
    end
})

-- JUMP SYSTEM
Tab1:AddSection({"Sistema de Pulo"})

Tab1:AddToggle({
    Name = "Ativar Jump",
    Default = false,
    Callback = function(v)
        jumpEnabled = v
        humanoid.JumpPower = v and jumpValue or 50
        print("Jump:", v and "ON" or "OFF")
    end
})

Tab1:AddSlider({
    Text = "Força do Pulo",
    Min = 0,
    Max = 200,
    Default = 50,
    Callback = function(v)
        jumpValue = v
        if jumpEnabled then humanoid.JumpPower = v end
        print("Jump Power:", v)
    end
})

-- NOCLIP SYSTEM
Tab1:AddSection({"Atravessar Paredes"})

local function startNoclip()
    print("Ativando noclip...")
    noclipEnabled = true
    noclipConnection = RunService.Stepped:Connect(function()
        if not noclipEnabled then return end
        for _, part in pairs(character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
    end)
    print("✓ Noclip ativado!")
end

local function stopNoclip()
    print("Desativando noclip...")
    noclipEnabled = false
    if noclipConnection then noclipConnection:Disconnect() end
    for _, part in pairs(character:GetDescendants()) do
        if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
            part.CanCollide = true
        end
    end
    print("✓ Noclip desativado!")
end

Tab1:AddToggle({
    Name = "Atravessar Paredes",
    Default = false,
    Callback = function(v)
        if v then startNoclip() else stopNoclip() end
    end
})

-- COR DO CÉU (CORRIGIDO)
Tab1:AddSection({"Cor do Céu"})

-- Salvar configurações originais
local originalSkySettings = {
    Ambient = Lighting.Ambient,
    OutdoorAmbient = Lighting.OutdoorAmbient,
    FogColor = Lighting.FogColor,
    FogEnd = Lighting.FogEnd,
    FogStart = Lighting.FogStart,
    ClockTime = Lighting.ClockTime,
    Brightness = Lighting.Brightness
}

-- Salvar Atmosphere original se existir
local originalAtmosphere = Lighting:FindFirstChildOfClass("Atmosphere")
local savedAtmosphereSettings = nil
if originalAtmosphere then
    savedAtmosphereSettings = {
        Color = originalAtmosphere.Color,
        Decay = originalAtmosphere.Decay,
        Density = originalAtmosphere.Density,
        Glare = originalAtmosphere.Glare,
        Haze = originalAtmosphere.Haze,
        Offset = originalAtmosphere.Offset
    }
end

local selectedSkyColor = "Normal"
local currentSkyDropdown = nil

currentSkyDropdown = Tab1:AddDropdown({
    Name = "Cor do Céu",
    Options = {"Normal", "Azul Céu", "Vermelho Fogo", "Verde Floresta", "Roxo Místico", "Rosa Suave", "Laranja Pôr do Sol", "Amarelo Dourado"},
    Default = "Normal",
    Callback = function(v)
        selectedSkyColor = v
        
        -- Aplicar imediatamente
        if v == "Normal" then
            -- Restaurar tudo
            Lighting.Ambient = originalSkySettings.Ambient
            Lighting.OutdoorAmbient = originalSkySettings.OutdoorAmbient
            Lighting.FogColor = originalSkySettings.FogColor
            Lighting.FogEnd = originalSkySettings.FogEnd
            Lighting.FogStart = originalSkySettings.FogStart
            Lighting.ClockTime = originalSkySettings.ClockTime
            Lighting.Brightness = originalSkySettings.Brightness
            
            -- Restaurar Atmosphere
            local atmosphere = Lighting:FindFirstChildOfClass("Atmosphere")
            if atmosphere and savedAtmosphereSettings then
                atmosphere.Color = savedAtmosphereSettings.Color
                atmosphere.Decay = savedAtmosphereSettings.Decay
                atmosphere.Density = savedAtmosphereSettings.Density
                atmosphere.Glare = savedAtmosphereSettings.Glare
                atmosphere.Haze = savedAtmosphereSettings.Haze
                atmosphere.Offset = savedAtmosphereSettings.Offset
            elseif atmosphere and not originalAtmosphere then
                atmosphere:Destroy()
            end
            
            print("✓ Céu restaurado ao normal!")
        else
            -- Cores definidas
            local skyColors = {
                ["Azul Céu"] = {
                    Ambient = Color3.fromRGB(100, 150, 200),
                    OutdoorAmbient = Color3.fromRGB(135, 206, 235),
                    FogColor = Color3.fromRGB(135, 206, 250),
                    Atmosphere = Color3.fromRGB(120, 180, 255)
                },
                ["Vermelho Fogo"] = {
                    Ambient = Color3.fromRGB(180, 50, 50),
                    OutdoorAmbient = Color3.fromRGB(255, 70, 70),
                    FogColor = Color3.fromRGB(255, 100, 100),
                    Atmosphere = Color3.fromRGB(255, 50, 50)
                },
                ["Verde Floresta"] = {
                    Ambient = Color3.fromRGB(50, 150, 80),
                    OutdoorAmbient = Color3.fromRGB(70, 200, 100),
                    FogColor = Color3.fromRGB(80, 220, 120),
                    Atmosphere = Color3.fromRGB(50, 255, 100)
                },
                ["Roxo Místico"] = {
                    Ambient = Color3.fromRGB(120, 50, 180),
                    OutdoorAmbient = Color3.fromRGB(180, 80, 255),
                    FogColor = Color3.fromRGB(200, 100, 255),
                    Atmosphere = Color3.fromRGB(200, 50, 255)
                },
                ["Rosa Suave"] = {
                    Ambient = Color3.fromRGB(200, 120, 150),
                    OutdoorAmbient = Color3.fromRGB(255, 150, 200),
                    FogColor = Color3.fromRGB(255, 180, 220),
                    Atmosphere = Color3.fromRGB(255, 150, 200)
                },
                ["Laranja Pôr do Sol"] = {
                    Ambient = Color3.fromRGB(200, 120, 50),
                    OutdoorAmbient = Color3.fromRGB(255, 150, 70),
                    FogColor = Color3.fromRGB(255, 170, 100),
                    Atmosphere = Color3.fromRGB(255, 140, 50)
                },
                ["Amarelo Dourado"] = {
                    Ambient = Color3.fromRGB(200, 180, 80),
                    OutdoorAmbient = Color3.fromRGB(255, 220, 100),
                    FogColor = Color3.fromRGB(255, 240, 150),
                    Atmosphere = Color3.fromRGB(255, 215, 0)
                }
            }
            
            local colorData = skyColors[v]
            if colorData then
                -- Aplicar cores de iluminação
                Lighting.Ambient = colorData.Ambient
                Lighting.OutdoorAmbient = colorData.OutdoorAmbient
                Lighting.FogColor = colorData.FogColor
                Lighting.FogEnd = 1000
                Lighting.Brightness = 2
                
                -- Criar ou modificar Atmosphere
                local atmosphere = Lighting:FindFirstChildOfClass("Atmosphere")
                if not atmosphere then
                    atmosphere = Instance.new("Atmosphere")
                    atmosphere.Parent = Lighting
                end
                
                atmosphere.Color = colorData.Atmosphere
                atmosphere.Decay = colorData.Atmosphere
                atmosphere.Density = 0.3
                atmosphere.Offset = 0.5
                atmosphere.Glare = 0.5
                atmosphere.Haze = 1.5
                
                print("✓ Céu alterado para:", v)
            end
        end
    end
})

-- Botão adicional (opcional, já aplica automaticamente)
Tab1:AddButton({"Resetar Céu", function()
    selectedSkyColor = "Normal"
    if currentSkyDropdown then
        currentSkyDropdown:Set("Normal")
    end
    
    Lighting.Ambient = originalSkySettings.Ambient
    Lighting.OutdoorAmbient = originalSkySettings.OutdoorAmbient
    Lighting.FogColor = originalSkySettings.FogColor
    Lighting.FogEnd = originalSkySettings.FogEnd
    Lighting.FogStart = originalSkySettings.FogStart
    Lighting.ClockTime = originalSkySettings.ClockTime
    Lighting.Brightness = originalSkySettings.Brightness
    
    local atmosphere = Lighting:FindFirstChildOfClass("Atmosphere")
    if atmosphere and savedAtmosphereSettings then
        atmosphere.Color = savedAtmosphereSettings.Color
        atmosphere.Decay = savedAtmosphereSettings.Decay
    elseif atmosphere and not originalAtmosphere then
        atmosphere:Destroy()
    end
    
    print("✓ Céu totalmente resetado!")
end})

print("✓ Tab Movimento criada!")

-- ============================================
-- TAB 2: TOOLS
-- ============================================
print("⏳ Criando Tab Tools...")

local Tab2 = Window:MakeTab({"Tools", "rbxassetid://7733911816"})

Tab2:AddSection({"Ferramentas"})

Tab2:AddButton({"Pegar Todos Itens", function()
    local count = 0
    for _, v in pairs(workspace:GetDescendants()) do
        if v:IsA("Tool") then
            v.Parent = player.Backpack
            count = count + 1
        end
    end
    print("✓ Coletados", count, "itens!")
end})

Tab2:AddButton({"Build Tool", function()
    local tool = Instance.new("Tool")
    tool.Name = "Build Tool"
    tool.RequiresHandle = false
    
    local handle = Instance.new("Part")
    handle.Name = "Handle"
    handle.Size = Vector3.new(1, 1, 1)
    handle.Transparency = 1
    handle.Parent = tool
    
    tool.Activated:Connect(function()
        local part = Instance.new("Part")
        part.Size = Vector3.new(4, 1, 4)
        part.Anchored = true
        part.BrickColor = BrickColor.Random()
        part.Position = rootPart.Position + (rootPart.CFrame.LookVector * 5)
        part.Parent = workspace
        print("✓ Bloco criado!")
    end)
    
    tool.Parent = player.Backpack
    print("✓ Build Tool adicionada!")
end})

-- Espionar
Tab2:AddSection({"Espionar Jogadores"})

local function getPlayers()
    local list = {}
    for _, p in pairs(Players:GetPlayers()) do
        if p ~= player then
            table.insert(list, p.Name)
        end
    end
    return list
end

local selectedSpy = nil

local spyDrop = Tab2:AddDropdown({
    Name = "Selecionar Jogador",
    Options = getPlayers(),
    Default = "",
    Callback = function(v)
        selectedSpy = v
        print("Jogador selecionado:", v)
    end
})

Tab2:AddButton({"Espiar", function()
    if selectedSpy and selectedSpy ~= "" then
        local target = Players:FindFirstChild(selectedSpy)
        if target and target.Character and target.Character:FindFirstChild("Humanoid") then
            workspace.CurrentCamera.CameraSubject = target.Character.Humanoid
            print("✓ Espiando:", selectedSpy)
        else
            print("❌ Jogador não encontrado!")
        end
    else
        print("❌ Selecione um jogador!")
    end
end})

Tab2:AddButton({"Parar Espiar", function()
    workspace.CurrentCamera.CameraSubject = humanoid
    print("✓ Visão restaurada")
end})

Tab2:AddButton({"Atualizar Lista", function()
    spyDrop:Refresh(getPlayers(), true)
    print("✓ Lista atualizada!")
end})

print("✓ Tab Tools criada!")

-- ============================================
-- TAB 3: ADMIN
-- ============================================
print("⏳ Criando Tab Admin...")

local Tab3 = Window:MakeTab({"Admin", "rbxassetid://7733955511"})

Tab3:AddSection({"Poderes Admin"})

Tab3:AddButton({"Desbanir de Casas (Método 1)", function()
    print("Aplicando anti-ban método 1...")
    local count = 0
    
    -- Remover scripts de ban
    for _, v in pairs(workspace:GetDescendants()) do
        if v:IsA("Script") or v:IsA("LocalScript") then
            local name = v.Name:lower()
            if name:find("ban") or name:find("kick") or name:find("anticheat") then
                v.Disabled = true
                v:Destroy()
                count = count + 1
            end
        end
    end
    
    -- Desabilitar TouchInterests que kickam
    for _, v in pairs(workspace:GetDescendants()) do
        if v:IsA("TouchTransmitter") then
            v:Destroy()
            count = count + 1
        end
    end
    
    print("✓ Método 1 aplicado! Removidos:", count)
end})

Tab3:AddButton({"Desbanir de Casas (Método 2)", function()
    print("Aplicando anti-ban método 2...")
    
    -- Desabilitar colisões invisíveis
    for _, v in pairs(workspace:GetDescendants()) do
        if v:IsA("Part") and v.Transparency == 1 and v.CanCollide then
            v.CanCollide = false
        end
    end
    
    -- Remover ProximityPrompts suspeitos
    for _, v in pairs(workspace:GetDescendants()) do
        if v:IsA("ProximityPrompt") then
            local parent = v.Parent
            if parent and parent.Name:lower():find("door") then
                v:Destroy()
            end
        end
    end
    
    print("✓ Método 2 aplicado!")
end})

Tab3:AddButton({"Desbanir TUDO (Agressivo)", function()
    print("Aplicando anti-ban COMPLETO...")
    
    -- Método 1: Scripts
    for _, v in pairs(workspace:GetDescendants()) do
        if v:IsA("Script") or v:IsA("LocalScript") then
            pcall(function()
                v.Disabled = true
                v:Destroy()
            end)
        end
    end
    
    -- Método 2: TouchInterests
    for _, v in pairs(workspace:GetDescendants()) do
        if v:IsA("TouchTransmitter") then
            pcall(function() v:Destroy() end)
        end
    end
    
    -- Método 3: BodyPosition/BodyVelocity que forçam movimento
    for _, v in pairs(workspace:GetDescendants()) do
        if v:IsA("BodyPosition") or v:IsA("BodyVelocity") then
            if v.Parent and v.Parent.Parent ~= character then
                pcall(function() v:Destroy() end)
            end
        end
    end
    
    -- Método 4: Remover partes que bloqueiam
    for _, v in pairs(workspace:GetDescendants()) do
        if v:IsA("Part") then
            if v.Transparency >= 0.9 and v.CanCollide then
                v.CanCollide = false
            end
        end
    end
    
    print("✓ Anti-ban COMPLETO aplicado!")
end})

Tab3:AddToggle({
    Name = "Anti-Ban Automático",
    Default = false,
    Callback = function(v)
        if v then
            _G.AntiBanLoop = RunService.Heartbeat:Connect(function()
                -- Manter noclip nos objetos
                for _, part in pairs(character:GetDescendants()) do
                    if part:IsA("BasePart") then
                        part.CanCollide = false
                    end
                end
                
                -- Remover forças que empurram
                for _, obj in pairs(rootPart:GetChildren()) do
                    if obj:IsA("BodyPosition") or obj:IsA("BodyVelocity") or obj:IsA("BodyGyro") then
                        if obj.Name ~= "FlyVelocity" and obj.Name ~= "FlyGyro" and not flyEnabled then
                            obj:Destroy()
                        end
                    end
                end
            end)
            print("✓ Anti-Ban automático ATIVADO!")
        else
            if _G.AntiBanLoop then
                _G.AntiBanLoop:Disconnect()
                _G.AntiBanLoop = nil
            end
            print("✓ Anti-Ban automático DESATIVADO!")
        end
    end
})

-- Teleporte
Tab3:AddSection({"Teleporte"})

local selectedTP = nil

local tpDrop = Tab3:AddDropdown({
    Name = "Selecionar Jogador",
    Options = getPlayers(),
    Default = "",
    Callback = function(v)
        selectedTP = v
        print("Jogador selecionado:", v)
    end
})

Tab3:AddButton({"Teleportar", function()
    if selectedTP and selectedTP ~= "" then
        local target = Players:FindFirstChild(selectedTP)
        if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
            rootPart.CFrame = target.Character.HumanoidRootPart.CFrame + Vector3.new(0, 3, 0)
            print("✓ Teleportado para:", selectedTP)
        else
            print("❌ Jogador não encontrado!")
        end
    else
        print("❌ Selecione um jogador!")
    end
end})

Tab3:AddButton({"Atualizar Lista", function()
    tpDrop:Refresh(getPlayers(), true)
    print("✓ Lista atualizada!")
end})

print("✓ Tab Admin criada!")

-- ============================================
-- TAB 4: CONFIG
-- ============================================
print("⏳ Criando Tab Config...")

local Tab4 = Window:MakeTab({"Config", "rbxassetid://7733965118"})

Tab4:AddSection({"Sobre o Hub"})

Tab4:AddParagraph({"Dragon Hub 0.2", "Sistema completo
Plataforma: " .. platformType .. "
Features:
• Fly, Speed, Jump
• Noclip
• Tools & Admin
• Teleporte e Espionar"})

Tab4:AddButton({"Fechar Hub", function()
    print("Fechando hub...")
    if flyEnabled then stopFly() end
    if noclipEnabled then stopNoclip() end
    Window:Destroy()
    print("✓ Hub fechado!")
end})

print("✓ Tab Config criada!")

-- ============================================
-- SISTEMA DE ATUALIZAÇÃO
-- ============================================

-- Atualizar listas automaticamente
Players.PlayerAdded:Connect(function(p)
    task.wait(1)
    if spyDrop then spyDrop:Refresh(getPlayers(), true) end
    if tpDrop then tpDrop:Refresh(getPlayers(), true) end
    print("✓ Jogador entrou:", p.Name, "- Listas atualizadas")
end)

Players.PlayerRemoving:Connect(function(p)
    task.wait(1)
    if spyDrop then spyDrop:Refresh(getPlayers(), true) end
    if tpDrop then tpDrop:Refresh(getPlayers(), true) end
    print("✓ Jogador saiu:", p.Name, "- Listas atualizadas")
end)

-- Respawn
player.CharacterAdded:Connect(function(char)
    character = char
    humanoid = char:WaitForChild("Humanoid")
    rootPart = char:WaitForChild("HumanoidRootPart")
    if flyEnabled then stopFly() end
    if noclipEnabled then stopNoclip() end
    print("✓ Personagem respawnado")
end)

print("╔══════════════════════════════════════╗")
print("║   DRAGON HUB 0.2 CARREGADO 100%!     ║")
print("╚══════════════════════════════════════╝")
print("✓ Todas as funcionalidades ativas!")
print("✓ Plataforma:", platformType)
print("✓ Jogadores no servidor:", #Players:GetPlayers())
